import unittest
import requests
from nose.tools import assert_true
from unittest.mock import patch
from GitHubApi import getResp
from GitHubApi import getCommits_url


class Testmock(unittest.TestCase):

    
    def testRepo(self, mock):
        mock.get('https://api.github.com/users/dalviker/repos', text='achieved')
        self.assertEqual(getResp('https://api.github.com/users/dalviker/repos'), 'achieved')

    
    def testCommit(self, mock):
        mock.get('https://github.com/dalviker/eye.skylark/commits', 0)
        self.assertEqual(getCommits_url('https://github.com/dalviker/eye.skylark/commits', 'scy'), 0)

    def testUrlofRepo(self):
        response = requests.get('https://api.github.com/users/dalviker/repos')
        assert_true(response.ok)

    def testCommits(self):
        response = requests.get('https://github.com/dalviker/eye.skylark/commits')
        assert_true(response.ok)

   
    def testGetr(self, mock):
        mock.get.response = "achieved"
        response = getResp('dalviker')
        assert_true(response)

   
    def testGetC(self, mock):
        mock.get.response = "achieved"
        response = getCommits_url('dalviker', 'eye.skylark')
        assert_true(response.as_integer_ratio())


if __name__ == '__main__':
    unittest.main()
